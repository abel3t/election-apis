# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Account"""
type Account {
  email: String!
  firstName: String!
  id: Float!
  lastName: String!
  role: String!
}

input AccountLoginInput {
  email: String!
  password: String!
}

"""Candidate"""
type Candidate {
  createdAt: DateTime!
  electionId: String!
  id: String!
  imageUrl: String
  name: String!
  updatedAt: DateTime!
}

input CheckCodeInput {
  codeId: String!
  electionId: String!
}

type CheckCodeResult {
  isValid: Boolean!
}

"""Code"""
type Code {
  createdAt: DateTime!
  downloaded: Float!
  id: String!
  isActive: Boolean!
  isUsed: Boolean!
  updatedAt: DateTime!
}

input CreateAdminAccountInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  secretKey: String!
}

input CreateCandidateInput {
  electionId: String!
  imageUrl: String!
  name: String!
}

input CreateElectionInput {
  name: String!
}

input CreateVoteInput {
  candidateIds: [String!]!
  codeId: String!
  electionId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Election"""
type Election {
  accountId: String!
  createdAt: DateTime!
  id: String!
  name: String!
  status: String!
  updatedAt: DateTime!
}

input GenerateCodesCodeInput {
  amount: Float!
  electionId: String!
}

type LoginResult {
  accessToken: String!
  refreshToken: String!
  token: String!
  user: Account!
}

type Mutation {
  cloneElection(electionId: String!): Boolean!
  createAccount(input: CreateAdminAccountInput!): SignUpResult!
  createCandidate(input: CreateCandidateInput!): Candidate!
  createElection(input: CreateElectionInput!): Election!
  createVotes(input: CreateVoteInput!): Boolean!
  deleteCandidate(candidateId: String!, electionId: String!): Boolean!
  generateCodes(input: GenerateCodesCodeInput!): [Code!]!
  login(input: AccountLoginInput!): LoginResult!
  refreshToken(input: RefreshTokenInput!): LoginResult!
  updateCode(input: UpdateCodeInput!): Code!
  updateElection(electionId: String!, name: String!): Boolean!
}

type Query {
  checkCode(input: CheckCodeInput!): CheckCodeResult!
  getCandidates(codeId: String!, electionId: String!): [Candidate!]!
  getCodes(electionId: String!): [Code!]!
  getElections: [Election!]!
  getProfile: Account!
}

input RefreshTokenInput {
  email: String!
  refreshToken: String!
}

type SignUpResult {
  email: String!
  role: String!
}

input UpdateCodeInput {
  codeId: String!
  downloaded: Float!
  electionId: String!
  isActive: Boolean!
}